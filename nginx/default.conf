upstream client {
    server client:3000;
}

upstream api {
    server api:5000;
}

server {
    listen 80;
# This block specifies that requests to the root directory (/) should be proxied to the client backend server using the proxy_pass directive.
    location / {
        proxy_pass http://client;
    }
# This block is for handling WebSocket connections. It specifies that requests to the /ws directory should be proxied to the client backend server, 
# but also includes additional directives to handle the WebSocket protocol (proxy_http_version 1.1;, proxy_set_header Upgrade $http_upgrade;, and proxy_set_header Connection "upgrade";).
    location /ws {
        proxy_pass http://client;
        proxy_http_version 1.1; # this line specifies that the proxy connection will use the HTTP 1.1 protocol. The WebSocket protocol works over the HTTP 1.1 protocol.
        proxy_set_header Upgrade $http_upgrade; # this line ensures that the Upgrade request header is sent along with the WebSocket request. The Upgrade header indicates that the client is requesting an upgrade to the WebSocket protocol.
        proxy_set_header Connection "upgrade"; # this line sets the Connection header to "upgrade". This indicates that the server wants to upgrade the connection to the WebSocket protocol.
    }

# This block specifies that requests to the /api directory should be proxied to the api backend server. It also includes a rewrite directive to remove the /api prefix from the request before passing it on to the backend server.
    location /api {
        rewrite ^/api/(.*)$ /$1 break; # remove /api from the request
        proxy_pass http://api;
    }
}
